class Solution {
    int n;
    public void sortdiagonal(int row, int col, int[][] grid, boolean asc)
    {
        ArrayList<Integer> vec=new ArrayList<>();
        int i=row;
        int j=col;
        while(i<n && j<n)
        {
            vec.add(grid[i][j]);
            i++;
            j++;
        }

        if(asc)
        {
            Collections.sort(vec);
        }
        else{
            vec.sort(Collections.reverseOrder());
        }
        i=row;
        j=col;
       for(int val:vec)
       {
        grid[i][j]=val;
        i++;
        j++;
       }
    } 
    public int[][] sortMatrix(int[][] grid) {
        n=grid.length;
      for(int row=0;row<n;row++)
      {
        sortdiagonal(row,0,grid,false);
      } 
      for(int col=1;col<n;col++)
      {
        sortdiagonal(0,col,grid,true);
      } 
      return grid;
    }
}
